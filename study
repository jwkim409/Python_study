# 함수 / paramaters(매개변수)
def say_hello(user_name, user_age):
    print("hello", user_name)
    print("you're", user_age, "years old")

say_hello("Garden", 0) # 실제로 전달할 데이터 Garden -> arguments(인수)


# Defult Paramaters
def say_hello(user_name = "anonymous"):
    print("hello", user_name)

say_hello()


# 리턴: return 함수 바깥으로 값을 보냄
def tax_calc(money):
    return money * 0.35

def pay_tax(tax):
    print("Thank you for paying", tax)

pay_tax(tax_calc(15000000))



# 계산기
def plus(a, b):
    print(a + b)

def minus(a, b):
    print(a - b)

def multiple(a, b):
    print(a * b)

def divid(a, b):
    print(a / b)

def pow(a, b):
    print(a ** b)

plus(1,2)
print()

minus(2,1)
print()

multiple(1,1)
print()

divid(6,2)
print()

pow(2,2)
print()


# 변수를 포함한 string 만드는 법
# f""로 문자열을 표현하면 변수를 표현할 수 있다. (변수는 변수명을 중괄호({ })로 나타낸다)
my_name = "kim"
my_age = 0
my_hair_color = "black"

print(f"Hello I'm {my_name}, I have {my_age} years in the earth, {my_hair_color} is my hair color.")

def make_juice(fruit):
    return f"{fruit}+ cup "

def add_ice(juice):
    return f"{juice}+ ice "

def add_sugar(iced_juice):
    return f"{iced_juice}+ sugar"

juice = make_juice("apple ")
cold_juice = add_ice(juice)
perfect_juice = add_sugar(cold_juice)

print(perfect_juice)

# if 조건문
a = 10
if a == 10:
    print("Correct")

# if else
password_correct = True

if password_correct:
    print("Here is your money")
else:
    print("Wrong password")

# elif
winner = 10

if winner > 10:
    print("Winner is grater than 10")
elif winner < 10:
    print("Winner is less than 10")
elif winner != 10:
    print("Winner is not 10")
else:
    print("Winner is 10")

# input : 사용자에게 질문이 표시되는 function(1개의 argument만 가능)
age = int(input("How old are you?"))

print("user answer", age)

# type : variable의 type을 알려주는 function
print(type(age))

# and, or
if age < 18:
    print("You can't drink.")
elif age >= 18 and age <= 35:
    print("You drink beer.")
elif age == 60 or age == 70:
    print("Birthday party!")
else:
    print("You can drink all.")
    
    
""" 쌍따음표 3개 위아래로 주면 주석
# 파이썬 표준 라이브러리 import
from random import randint  # from이 모듈에서 이 함수를 import 해줘

user_choice = int(input("Choose number."))
pc_choice = randint(0, 50)  # 이걸 import 했어

if user_choice == pc_choice:
    print("You Won!")
elif user_choice > pc_choice:
    print("Lower! Computer chose", pc_choice)
elif user_choice < pc_choice:
    print("Higher! Computer chose", pc_choice)
"""

# while 반복문 / if는 한 번만 while은 반복
distance = 0

while distance <= 20:
    print("I'm running", distance, "km")
    distance = distance + 1


# 파이썬 도박(유저가 이길 때까지 반복)
from random import randint  # from이 모듈에서 이 함수를 import 해줘

print("Welcome to Python Casino.")
pc_choice = randint(0, 50)  # 이걸 import 했어

playing = True

while playing:
    user_choice = int(input("Choose number (0-50)"))
    if user_choice == pc_choice:
        print("You Won!")
        playing = False  # 유저가 이기면 게임 끝
    elif user_choice > pc_choice:
        print("Lower!")
    elif user_choice < pc_choice:
        print("Higher!")
        
        
# 자료구조(data structure)를 사용하여 데이터 구조화 알아보기
# list, tuple, dictionary

# Method
# method.functuin()   함수만 호출할 수는 X
# 내부에 있는 function들은 function이라고 하지 않고 method이라고 한다.
# -> 함수가 데이터와 결합되어 있다면 메소드, 아니면 함수
# name 메소드는 데이터를 변환해줌
name = "kim"
print(name.startswith("k"))  # name 변수 안에 startswith라는 method가 있음.

이름 = "kim"
print(이름.replace("m", "ck"))

kim = "kim"
print(kim.endswith("m"))


# list는 변수 한 개만 가능
days_of_week = ["Mon", "Tue", "Wed", "Thur", "Fri"]
# print(days_of_week.count("Wed"))

# days_of_week.clear()

days_of_week.append("Sat")
print(days_of_week)
days_of_week.append("Sun")
print(days_of_week)

days_of_week.remove("Fri")
print(days_of_week)

print(days_of_week[3])
